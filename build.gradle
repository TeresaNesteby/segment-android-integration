// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.3.1'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://kahuna.github.io/kahuna-android/sdk" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

def kahunaSegmentIntegrationVersion = "1.1.0"

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName kahunaSegmentIntegrationVersion

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }
}

task kahunaSegmentIntegrationReleaseJar(type: Jar, dependsOn: assembleRelease) {
    description = "Create KahunaSegmentIntegration.jar."

    from "build/intermediates/classes/release/"
    include 'com/kahuna/integration/android/segment/kahuna/**'
    archiveName 'KahunaSegmentIntegration.jar'
}


// Javadoc bag of joy
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PUBLIC;
        failOnError = false;
        include '**/KahunaIntegration.java';
    }
}

task createJavadocBundle(type: Zip, dependsOn: "generateReleaseJavadoc") {
    description = "Create javadoc.zip for Kahuna's public Javadoc."
    archiveName = "javadoc.zip";
    from "${projectDir}/build/docs/javadoc"
    include '**'
}

task createKahunaBundle(type: Zip) {
    archiveName = "KahunaSegmentIntegration.zip";
    description = "Create KahunaSegmentIntegration.zip bundle that includes Kahuna.jar, CHANGELOG, and javadoc.zip"

    from ("./") {
        include 'CHANGELOG.md'
    }
    from ("build/distributions") {
        include 'javadoc.zip'
    }
    from ("build/libs") {
        include 'KahunaSegmentIntegration.jar'
    }

    into 'KahunaSegmentIntegration';
}

createKahunaBundle.dependsOn kahunaSegmentIntegrationReleaseJar, createJavadocBundle

// lint and Java8 don't mix well.
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.kahuna.integration.android.segment'
            artifactId 'kahuna'
            version kahunaSegmentIntegrationVersion
            artifact 'build/libs/KahunaSegmentIntegration.jar'
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

dependencies {
    compile 'com.kahuna.sdk:kahuna:2.+'
    compile 'com.google.android.gms:play-services:8.1.0'

    provided 'com.segment.analytics.android:analytics:4.0.0'
    testCompile 'junit:junit:4.12'
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    testCompile 'com.segment.analytics.android:analytics-tests:4.0.0'

    testCompile 'org.assertj:assertj-core:1.7.1'

    testCompile 'org.mockito:mockito-core:1.10.19'

    testCompile 'org.powermock:powermock:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
}
